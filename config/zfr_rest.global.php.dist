<?php

/**
 * This is the config file for ZfrRest. Just drop this file into your config/autoload folder (don't
 * forget to remove the .dist extension from the file), and configure it as you want
 */

return array(
    'zfr_rest' => array(
        /**
         * Service name of the object manager instance. It is retrieved from the service manager. For instance, if you
         * are using Doctrine ORM Module, this value may be "doctrine.entitymanager.orm_default"
         */
        // 'object_manager' => 'doctrine.entitymanager.orm_default',

        /**
         * Service name of the Metadata cache provider used for caching the mapping. It must returns an instance of
         * \Metadata\Cache\CacheInterface
         */
        // 'cache' => 'Application\Cache\ApcCache',

        /**
         * If this listener is registered (it is not by default), it will check if the request contains
         * a header "X-HTTP-Method-Override". This header allows to change the HTTP verb. This is useful in
         * some contexts (for instance, some companies' proxies only allow GET and POST methods)
         */
        // 'register_http_method_override_listener' => false,

        /**
         * Which behaviours each controller should automatically do for us?
         */
        'controller_behaviours' => array(
            /**
             * If this is set to true (it is by default), then controller will automatically instantiate the
             * input filter specified in resource metadata (if there is one) - from service locator first, or
             * directly instantiate it if not found -, and validate data. If data is incorrect, it will return
             * a 400 HTTP error (Bad Request) with the failed validation messages in it).
             */
            // 'auto_validate' => true,

            /**
             * If this is set to true (it is by default), then controller will automatically instantiate the hydrator
             * specified in resource metadata (if there is one) - from service locator first, or directly instantiate
             * it if not found - and hydrate resource object with previously validated data.
             *
             * Please note that for security reason, if you activate this option, you SHOULD NOT deactivate auto
             * validation UNLESS you validate data yourself.
             */
            // 'auto_hydrate' => true
        ),

        /**
         * Specify the resource metadata drivers. This is used by ZfrRest to extract your mapping. Currently one
         * method is supported: annotations.
         *
         * To add an annotation driver:
         *
         *      'application_driver' => array(
         *          'class' => 'ZfrRest\Resource\Metadata\Driver\AnnotationDriver'
         *      )
         */
        'drivers' => array(),

        /**
         * Allow to register new method handler (or override existing ones). A handler is a simple object that
         * knows how to treat a single HTTP method (like POST, GET...). ZfrRest comes bundled with sane
         * implementations for most common verbs, but you can add yours or modify existing ones easily
         *
         * You must specify a service manager compliant config, and the key must be the HTTP method:
         *
         *      'invokables' => array(
         *          'patch' => 'My\PatchHandler'
         *      )
         */
        'method_handler_manager' => array()
    )
);
